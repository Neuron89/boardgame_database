{"ast":null,"code":"import React,{useState,useEffect}from'react';import SearchBar from'./components/SearchBar';import GameList from'./components/GameList';import AddGameForm from'./components/AddGameForm';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[games,setGames]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[showAddForm,setShowAddForm]=useState(false);// Fetch all games from the database\n// Add this at the top of your file\nconst API_URL=process.env.REACT_APP_API_URL||'http://192.168.1.252:5000';const fetchGames=async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/api/boardgames\"));if(!response.ok){throw new Error('Failed to fetch games');}const data=await response.json();setGames(data);}catch(error){console.error('Error fetching games:',error);}};// Load games when component mounts\nuseEffect(()=>{fetchGames();},[]);// Handle search\nconst handleSearch=async term=>{setSearchTerm(term);try{const response=await fetch(\"\".concat(API_URL,\"/api/boardgames/search?term=\").concat(encodeURIComponent(term)));if(!response.ok){throw new Error('Failed to search games');}const data=await response.json();setGames(data);}catch(error){console.error('Error searching games:',error);}};// Handle deleting a game\nconst handleDeleteGame=async gameId=>{try{console.log('Attempting to delete game with ID:',gameId);const response=await fetch(\"\".concat(API_URL,\"/api/boardgames/\").concat(gameId),{method:'DELETE'});const data=await response.json();console.log('Server response:',data);if(!response.ok){throw new Error(\"Failed to delete game: \".concat(data.error||'Unknown error'));}console.log('Game deleted successfully');// Refresh the games list after deletion\nawait fetchGames();}catch(error){console.error('Error deleting game:',error);alert('Failed to delete game. Please try again.');}};// Handle adding new game\nconst handleAddGame=async newGame=>{try{console.log('Sending new game data:',newGame);// Debug log\n// Parse the players and time values safely\nlet minPlayers,maxPlayers,playingTime;try{minPlayers=newGame.players?parseInt(newGame.players.split('-')[0]):null;maxPlayers=newGame.players?parseInt(newGame.players.split('-')[1]):null;playingTime=newGame.time?parseInt(newGame.time.split('-')[0]):null;}catch(parseError){console.error('Error parsing numeric values:',parseError);minPlayers=null;maxPlayers=null;playingTime=null;}const gameData={name:newGame.title,description:newGame.description||'',min_players:minPlayers,max_players:maxPlayers,playing_time:playingTime,year_published:null,// Add if you have this field\npublisher:'',// Add if you have this field\nimage_url:newGame.image||'',complexity:newGame.complexity||'',date_added:new Date().toISOString().split('T')[0]};console.log('Formatted game data:',gameData);// Debug log\nconst response=await fetch(\"\".concat(API_URL,\"/api/boardgames\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(gameData)});if(!response.ok){throw new Error('Failed to add game');}const savedGame=await response.json();console.log('Server response:',savedGame);// Refresh the games list after adding\nawait fetchGames();console.log('Updated games list:',games);setShowAddForm(false);}catch(error){console.error('Error adding game:',error);alert('Failed to add game. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Boardgame Database\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),/*#__PURE__*/_jsx(\"button\",{className:\"add-button\",onClick:()=>setShowAddForm(true),children:\"Add Game\"})]}),showAddForm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-content\",children:/*#__PURE__*/_jsx(AddGameForm,{onSubmit:handleAddGame,onCancel:()=>setShowAddForm(false)})})}),/*#__PURE__*/_jsx(GameList,{games:games,onDeleteGame:handleDeleteGame})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","SearchBar","GameList","AddGameForm","jsx","_jsx","jsxs","_jsxs","App","games","setGames","searchTerm","setSearchTerm","showAddForm","setShowAddForm","API_URL","process","env","REACT_APP_API_URL","fetchGames","response","fetch","concat","ok","Error","data","json","error","console","handleSearch","term","encodeURIComponent","handleDeleteGame","gameId","log","method","alert","handleAddGame","newGame","minPlayers","maxPlayers","playingTime","players","parseInt","split","time","parseError","gameData","name","title","description","min_players","max_players","playing_time","year_published","publisher","image_url","image","complexity","date_added","Date","toISOString","headers","body","JSON","stringify","savedGame","className","children","onSearch","onClick","onSubmit","onCancel","onDeleteGame"],"sources":["/home/neuron/projects/boardgame_database/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport GameList from './components/GameList';\nimport AddGameForm from './components/AddGameForm';\nimport './App.css';\n\nfunction App() {\n  const [games, setGames] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  // Fetch all games from the database\n  // Add this at the top of your file\n  const API_URL = process.env.REACT_APP_API_URL || 'http://192.168.1.252:5000';\n  \n  const fetchGames = async () => {\n      try {\n        const response = await fetch(`${API_URL}/api/boardgames`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch games');\n      }\n      const data = await response.json();\n      setGames(data);\n    } catch (error) {\n      console.error('Error fetching games:', error);\n    }\n  };\n\n  // Load games when component mounts\n  useEffect(() => {\n    fetchGames();\n  }, []);\n\n  // Handle search\n  const handleSearch = async (term) => {\n    setSearchTerm(term);\n    try {\n      const response = await fetch(`${API_URL}/api/boardgames/search?term=${encodeURIComponent(term)}`);\n      if (!response.ok) {\n        throw new Error('Failed to search games');\n      }\n      const data = await response.json();\n      setGames(data);\n    } catch (error) {\n      console.error('Error searching games:', error);\n    }\n  };\n\n  // Handle deleting a game\n  const handleDeleteGame = async (gameId) => {\n    try {\n      console.log('Attempting to delete game with ID:', gameId);\n      \n      const response = await fetch(`${API_URL}/api/boardgames/${gameId}`, {\n        method: 'DELETE',\n      });\n\n      const data = await response.json();\n      console.log('Server response:', data);\n\n      if (!response.ok) {\n        throw new Error(`Failed to delete game: ${data.error || 'Unknown error'}`);\n      }\n\n      console.log('Game deleted successfully');\n      // Refresh the games list after deletion\n      await fetchGames();\n    } catch (error) {\n      console.error('Error deleting game:', error);\n      alert('Failed to delete game. Please try again.');\n    }\n  };\n\n  // Handle adding new game\n  const handleAddGame = async (newGame) => {\n    try {\n      console.log('Sending new game data:', newGame); // Debug log\n      \n      // Parse the players and time values safely\n      let minPlayers, maxPlayers, playingTime;\n      try {\n        minPlayers = newGame.players ? parseInt(newGame.players.split('-')[0]) : null;\n        maxPlayers = newGame.players ? parseInt(newGame.players.split('-')[1]) : null;\n        playingTime = newGame.time ? parseInt(newGame.time.split('-')[0]) : null;\n      } catch (parseError) {\n        console.error('Error parsing numeric values:', parseError);\n        minPlayers = null;\n        maxPlayers = null;\n        playingTime = null;\n      }\n\n      const gameData = {\n        name: newGame.title,\n        description: newGame.description || '',\n        min_players: minPlayers,\n        max_players: maxPlayers,\n        playing_time: playingTime,\n        year_published: null, // Add if you have this field\n        publisher: '', // Add if you have this field\n        image_url: newGame.image || '',\n        complexity: newGame.complexity || '',\n        date_added: new Date().toISOString().split('T')[0]\n      };\n\n      console.log('Formatted game data:', gameData); // Debug log\n\n      const response = await fetch(`${API_URL}/api/boardgames`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(gameData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add game');\n      }\n\n      const savedGame = await response.json();\n      console.log('Server response:', savedGame);\n\n      // Refresh the games list after adding\n      await fetchGames();\n      console.log('Updated games list:', games);\n      setShowAddForm(false);\n    } catch (error) {\n      console.error('Error adding game:', error);\n      alert('Failed to add game. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Boardgame Database</h1>\n      <div className=\"controls\">\n        <SearchBar onSearch={handleSearch} />\n        <button \n          className=\"add-button\"\n          onClick={() => setShowAddForm(true)}\n        >\n          Add Game\n        </button>\n      </div>\n      \n      {showAddForm && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <AddGameForm \n              onSubmit={handleAddGame}\n              onCancel={() => setShowAddForm(false)}\n            />\n          </div>\n        </div>\n      )}\n\n      <GameList games={games} onDeleteGame={handleDeleteGame} />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}